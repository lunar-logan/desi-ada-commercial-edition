
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = "p7\xe9\x83\x9d0\xdd\xa0'\x96\xb5\x8fs\x93\xbf\xbb"
    
_lr_action_items = {'RETURN':([0,1,5,7,8,9,10,11,12,15,16,18,22,25,54,65,73,74,92,93,102,103,105,107,111,113,115,118,119,],[23,23,-10,-16,-9,-12,-14,-8,-13,-6,-11,-7,-15,-5,-35,23,23,-30,-34,-32,-19,-31,-20,-17,-33,23,23,-29,-18,]),'FUNC':([0,1,5,7,8,9,10,11,12,15,16,18,22,25,54,65,73,74,92,93,102,103,105,107,111,113,115,118,119,],[2,2,-10,-16,-9,-12,-14,-8,-13,-6,-11,-7,-15,-5,-35,2,2,-30,-34,-32,-19,-31,-20,-17,-33,2,2,-29,-18,]),'LOR':([28,30,31,32,34,35,36,38,39,44,45,48,49,50,51,67,72,76,77,78,79,80,81,82,83,84,85,86,87,88,91,104,],[-53,-52,-54,-56,-58,-55,-57,57,57,57,57,-37,-36,57,-38,57,57,-51,-43,-42,-47,-41,-50,-45,-49,-39,-46,-48,-40,-44,57,57,]),'WHILE':([0,1,5,7,8,9,10,11,12,15,16,18,22,25,54,65,73,74,92,93,102,103,105,107,111,113,115,118,119,],[4,4,-10,-16,-9,-12,-14,-8,-13,-6,-11,-7,-15,-5,-35,4,4,-30,-34,-32,-19,-31,-20,-17,-33,4,4,-29,-18,]),'PRINT':([0,1,5,7,8,9,10,11,12,15,16,18,22,25,54,65,73,74,92,93,102,103,105,107,111,113,115,118,119,],[3,3,-10,-16,-9,-12,-14,-8,-13,-6,-11,-7,-15,-5,-35,3,3,-30,-34,-32,-19,-31,-20,-17,-33,3,3,-29,-18,]),'CONST':([0,1,5,7,8,9,10,11,12,15,16,18,22,25,54,65,73,74,92,93,102,103,105,107,111,113,115,118,119,],[6,6,-10,-16,-9,-12,-14,-8,-13,-6,-11,-7,-15,-5,-35,6,6,-30,-34,-32,-19,-31,-20,-17,-33,6,6,-29,-18,]),'MINUS':([3,4,21,23,27,28,29,30,31,32,33,34,35,36,37,38,39,41,43,44,45,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,64,66,67,72,76,77,78,79,80,81,82,83,84,85,86,87,88,91,94,96,104,],[27,27,27,27,27,-53,27,-52,-54,-56,27,-58,-55,-57,27,63,63,27,27,63,63,-37,-36,63,-38,27,27,27,27,27,27,27,27,27,27,27,27,27,63,63,-51,63,-42,63,-41,63,63,63,-39,63,63,-40,63,63,27,27,63,]),'STRING':([3,4,21,23,27,29,33,37,41,43,52,53,55,56,57,58,59,60,61,62,63,64,66,94,96,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'LAND':([28,30,31,32,34,35,36,38,39,44,45,48,49,50,51,67,72,76,77,78,79,80,81,82,83,84,85,86,87,88,91,104,],[-53,-52,-54,-56,-58,-55,-57,59,59,59,59,-37,-36,59,-38,59,59,-51,-43,-42,-47,-41,59,-45,-49,-39,-46,-48,-40,-44,59,59,]),'RPAREN':([28,30,31,32,34,35,36,43,47,48,49,50,51,69,70,71,72,75,76,77,78,79,80,81,82,83,84,85,86,87,88,98,99,101,106,110,114,],[-53,-52,-54,-56,-58,-55,-57,-60,-59,-37,-36,76,-38,-21,95,-24,-22,-60,-51,-43,-42,-47,-41,-50,-45,-49,-39,-46,-48,-40,-44,108,-26,-28,-23,-25,-27,]),'SEMI':([28,30,31,32,34,35,36,38,45,47,48,49,51,67,68,76,77,78,79,80,81,82,83,84,85,86,87,88,91,95,104,],[-53,-52,-54,-56,-58,-55,-57,54,74,-59,-37,-36,-38,92,93,-51,-43,-42,-47,-41,-50,-45,-49,-39,-46,-48,-40,-44,103,105,111,]),'LTE':([28,30,31,32,34,35,36,38,39,44,45,48,49,50,51,67,72,76,77,78,79,80,81,82,83,84,85,86,87,88,91,104,],[-53,-52,-54,-56,-58,-55,-57,61,61,61,61,-37,-36,61,-38,61,61,-51,None,-42,None,-41,61,None,61,-39,None,None,-40,None,61,61,]),'RCURL':([1,5,7,8,9,10,11,12,15,16,18,22,25,54,65,73,74,89,90,92,93,97,102,103,105,107,111,113,115,116,117,118,119,],[-3,-10,-16,-9,-12,-14,-8,-13,-6,-11,-7,-15,-5,-35,-60,-60,-30,-4,102,-34,-32,107,-19,-31,-20,-17,-33,-60,-60,118,119,-29,-18,]),'LT':([28,30,31,32,34,35,36,38,39,44,45,48,49,50,51,67,72,76,77,78,79,80,81,82,83,84,85,86,87,88,91,104,],[-53,-52,-54,-56,-58,-55,-57,58,58,58,58,-37,-36,58,-38,58,58,-51,None,-42,None,-41,58,None,58,-39,None,None,-40,None,58,58,]),'PLUS':([3,4,21,23,27,28,29,30,31,32,33,34,35,36,37,38,39,41,43,44,45,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,64,66,67,72,76,77,78,79,80,81,82,83,84,85,86,87,88,91,94,96,104,],[29,29,29,29,29,-53,29,-52,-54,-56,29,-58,-55,-57,29,60,60,29,29,60,60,-37,-36,60,-38,29,29,29,29,29,29,29,29,29,29,29,29,29,60,60,-51,60,-42,60,-41,60,60,60,-39,60,60,-40,60,60,29,29,60,]),'GTE':([28,30,31,32,34,35,36,38,39,44,45,48,49,50,51,67,72,76,77,78,79,80,81,82,83,84,85,86,87,88,91,104,],[-53,-52,-54,-56,-58,-55,-57,64,64,64,64,-37,-36,64,-38,64,64,-51,None,-42,None,-41,64,None,64,-39,None,None,-40,None,64,64,]),'INTEGER':([3,4,21,23,27,29,33,37,41,43,52,53,55,56,57,58,59,60,61,62,63,64,66,94,96,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'LCURL':([28,30,31,32,34,35,36,39,44,48,49,51,76,77,78,79,80,81,82,83,84,85,86,87,88,108,112,],[-53,-52,-54,-56,-58,-55,-57,65,73,-37,-36,-38,-51,-43,-42,-47,-41,-50,-45,-49,-39,-46,-48,-40,-44,113,115,]),'ASSIGN':([14,20,40,47,68,],[41,-58,66,-59,94,]),'$end':([0,1,5,7,8,9,10,11,12,13,15,16,17,18,22,24,25,54,74,92,93,102,103,105,107,111,118,119,],[-60,-3,-10,-16,-9,-12,-14,-8,-13,0,-6,-11,-1,-7,-15,-2,-5,-35,-30,-34,-32,-19,-31,-20,-17,-33,-29,-18,]),'GT':([28,30,31,32,34,35,36,38,39,44,45,48,49,50,51,67,72,76,77,78,79,80,81,82,83,84,85,86,87,88,91,104,],[-53,-52,-54,-56,-58,-55,-57,52,52,52,52,-37,-36,52,-38,52,52,-51,None,-42,None,-41,52,None,52,-39,None,None,-40,None,52,52,]),'DIVIDE':([28,30,31,32,34,35,36,38,39,44,45,48,49,50,51,67,72,76,77,78,79,80,81,82,83,84,85,86,87,88,91,104,],[-53,-52,-54,-56,-58,-55,-57,53,53,53,53,-37,-36,53,-38,53,53,-51,53,-42,53,-41,53,53,53,53,53,53,53,53,53,53,]),'TIMES':([28,30,31,32,34,35,36,38,39,44,45,48,49,50,51,67,72,76,77,78,79,80,81,82,83,84,85,86,87,88,91,104,],[-53,-52,-54,-56,-58,-55,-57,56,56,56,56,-37,-36,56,-38,56,56,-51,56,-42,56,-41,56,56,56,56,56,56,56,56,56,56,]),'LPAREN':([3,4,20,21,23,27,29,33,37,41,43,46,47,52,53,55,56,57,58,59,60,61,62,63,64,66,94,96,],[33,33,43,33,33,33,33,33,33,33,33,75,-59,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'VAR':([0,1,5,7,8,9,10,11,12,15,16,18,22,25,54,65,73,74,92,93,102,103,105,107,111,113,115,118,119,],[19,19,-10,-16,-9,-12,-14,-8,-13,-6,-11,-7,-15,-5,-35,19,19,-30,-34,-32,-19,-31,-20,-17,-33,19,19,-29,-18,]),'ELSE':([107,],[112,]),'EQ':([28,30,31,32,34,35,36,38,39,44,45,48,49,50,51,67,72,76,77,78,79,80,81,82,83,84,85,86,87,88,91,104,],[-53,-52,-54,-56,-58,-55,-57,55,55,55,55,-37,-36,55,-38,55,55,-51,None,-42,None,-41,55,None,55,-39,None,None,-40,None,55,55,]),'ID':([0,1,2,3,4,5,6,7,8,9,10,11,12,15,16,18,19,21,22,23,25,26,27,29,33,37,41,42,43,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,73,74,75,92,93,94,96,100,102,103,105,107,109,111,113,115,118,119,],[20,20,26,34,34,-10,40,-16,-9,-12,-14,-8,-13,-6,-11,-7,42,34,-15,34,-5,47,34,34,34,34,34,47,34,34,34,-35,34,34,34,34,34,34,34,34,34,34,20,34,20,-30,100,-34,-32,34,34,47,-19,-31,-20,-17,100,-33,20,20,-29,-18,]),'IF':([0,1,5,7,8,9,10,11,12,15,16,18,22,25,54,65,73,74,92,93,102,103,105,107,111,113,115,118,119,],[21,21,-10,-16,-9,-12,-14,-8,-13,-6,-11,-7,-15,-5,-35,21,21,-30,-34,-32,-19,-31,-20,-17,-33,21,21,-29,-18,]),'NEQ':([28,30,31,32,34,35,36,38,39,44,45,48,49,50,51,67,72,76,77,78,79,80,81,82,83,84,85,86,87,88,91,104,],[-53,-52,-54,-56,-58,-55,-57,62,62,62,62,-37,-36,62,-38,62,62,-51,None,-42,None,-41,62,None,62,-39,None,None,-40,None,62,62,]),'FLOAT':([3,4,21,23,27,29,33,37,41,43,52,53,55,56,57,58,59,60,61,62,63,64,66,94,96,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'BOOL':([3,4,21,23,27,29,33,37,41,43,52,53,55,56,57,58,59,60,61,62,63,64,66,94,96,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'NOT':([3,4,21,23,27,29,33,37,41,43,52,53,55,56,57,58,59,60,61,62,63,64,66,94,96,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'COMMA':([28,30,31,32,34,35,36,43,47,48,49,51,69,70,71,72,75,76,77,78,79,80,81,82,83,84,85,86,87,88,98,99,101,106,110,114,],[-53,-52,-54,-56,-58,-55,-57,-60,-59,-37,-36,-38,-21,96,-24,-22,-60,-51,-43,-42,-47,-41,-50,-45,-49,-39,-46,-48,-40,-44,109,-26,-28,-23,-25,-27,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,65,73,113,115,],[1,1,1,1,1,]),'argument':([43,96,],[69,106,]),'print_statement':([0,1,65,73,113,115,],[5,5,5,5,5,5,]),'func_statement':([0,1,65,73,113,115,],[7,7,7,7,7,7,]),'parameters':([75,],[98,]),'assign_statement':([0,1,65,73,113,115,],[8,8,8,8,8,8,]),'if_else_statement':([0,1,65,73,113,115,],[9,9,9,9,9,9,]),'while_statement':([0,1,65,73,113,115,],[12,12,12,12,12,12,]),'return_statement':([0,1,65,73,113,115,],[10,10,10,10,10,10,]),'var_declaration':([0,1,65,73,113,115,],[11,11,11,11,11,11,]),'literal':([3,4,21,23,27,29,33,37,41,43,52,53,55,56,57,58,59,60,61,62,63,64,66,94,96,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'program':([0,],[13,]),'arguments':([43,],[70,]),'statement':([0,1,65,73,113,115,],[15,25,15,15,15,15,]),'if_statement':([0,1,65,73,113,115,],[16,16,16,16,16,16,]),'parameter':([75,109,],[99,114,]),'empty':([0,43,65,73,75,113,115,],[17,71,89,89,101,89,89,]),'location':([0,1,3,4,21,23,27,29,33,37,41,43,52,53,55,56,57,58,59,60,61,62,63,64,65,66,73,94,96,113,115,],[14,14,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,14,30,14,30,30,14,14,]),'const_declaration':([0,1,65,73,113,115,],[18,18,18,18,18,18,]),'func_call':([0,1,65,73,113,115,],[22,22,22,22,22,22,]),'typename':([26,42,100,],[46,68,110,]),'basicblock':([0,65,73,113,115,],[24,90,97,116,117,]),'expression':([3,4,21,23,27,29,33,37,41,43,52,53,55,56,57,58,59,60,61,62,63,64,66,94,96,],[38,39,44,45,48,49,50,51,67,72,77,78,79,80,81,82,83,84,85,86,87,88,91,104,72,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> empty','program',1,'p_program_empty','exprparse.py',159),
  ('program -> basicblock','program',1,'p_program','exprparse.py',165),
  ('basicblock -> statements','basicblock',1,'p_basicblock','exprparse.py',171),
  ('basicblock -> empty','basicblock',1,'p_basicblock','exprparse.py',172),
  ('statements -> statements statement','statements',2,'p_statements','exprparse.py',178),
  ('statements -> statement','statements',1,'p_statements_1','exprparse.py',185),
  ('statement -> const_declaration','statement',1,'p_statement','exprparse.py',192),
  ('statement -> var_declaration','statement',1,'p_statement','exprparse.py',193),
  ('statement -> assign_statement','statement',1,'p_statement','exprparse.py',194),
  ('statement -> print_statement','statement',1,'p_statement','exprparse.py',195),
  ('statement -> if_statement','statement',1,'p_statement','exprparse.py',196),
  ('statement -> if_else_statement','statement',1,'p_statement','exprparse.py',197),
  ('statement -> while_statement','statement',1,'p_statement','exprparse.py',198),
  ('statement -> return_statement','statement',1,'p_statement','exprparse.py',199),
  ('statement -> func_call','statement',1,'p_statement','exprparse.py',200),
  ('statement -> func_statement','statement',1,'p_statement','exprparse.py',201),
  ('if_statement -> IF expression LCURL basicblock RCURL','if_statement',5,'p_if_statement','exprparse.py',207),
  ('if_else_statement -> IF expression LCURL basicblock RCURL ELSE LCURL basicblock RCURL','if_else_statement',9,'p_if_else_statement','exprparse.py',213),
  ('while_statement -> WHILE expression LCURL basicblock RCURL','while_statement',5,'p_while_statement','exprparse.py',219),
  ('func_call -> ID LPAREN arguments RPAREN SEMI','func_call',5,'p_func_call','exprparse.py',225),
  ('arguments -> argument','arguments',1,'p_arguments','exprparse.py',231),
  ('argument -> expression','argument',1,'p_argument','exprparse.py',237),
  ('arguments -> arguments COMMA argument','arguments',3,'p_arguments_1','exprparse.py',243),
  ('arguments -> empty','arguments',1,'p_arguments_1','exprparse.py',244),
  ('parameter -> ID typename','parameter',2,'p_parameter','exprparse.py',254),
  ('parameters -> parameter','parameters',1,'p_parameters','exprparse.py',263),
  ('parameters -> parameters COMMA parameter','parameters',3,'p_parameters_1','exprparse.py',269),
  ('parameters -> empty','parameters',1,'p_parameters_1','exprparse.py',270),
  ('func_statement -> FUNC ID typename LPAREN parameters RPAREN LCURL basicblock RCURL','func_statement',9,'p_func_statement','exprparse.py',279),
  ('return_statement -> RETURN expression SEMI','return_statement',3,'p_return_statement','exprparse.py',285),
  ('const_declaration -> CONST ID ASSIGN expression SEMI','const_declaration',5,'p_const_declaration','exprparse.py',291),
  ('var_declaration -> VAR ID typename SEMI','var_declaration',4,'p_var_declaration','exprparse.py',297),
  ('var_declaration -> VAR ID typename ASSIGN expression SEMI','var_declaration',6,'p_var_declaration_expr','exprparse.py',303),
  ('assign_statement -> location ASSIGN expression SEMI','assign_statement',4,'p_assign_statement','exprparse.py',309),
  ('print_statement -> PRINT expression SEMI','print_statement',3,'p_print_statement','exprparse.py',315),
  ('expression -> PLUS expression','expression',2,'p_expression_unary','exprparse.py',321),
  ('expression -> MINUS expression','expression',2,'p_expression_unary','exprparse.py',322),
  ('expression -> NOT expression','expression',2,'p_expression_unary','exprparse.py',323),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binary','exprparse.py',329),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binary','exprparse.py',330),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binary','exprparse.py',331),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binary','exprparse.py',332),
  ('expression -> expression GT expression','expression',3,'p_expression_rel','exprparse.py',338),
  ('expression -> expression GTE expression','expression',3,'p_expression_rel','exprparse.py',339),
  ('expression -> expression LT expression','expression',3,'p_expression_rel','exprparse.py',340),
  ('expression -> expression LTE expression','expression',3,'p_expression_rel','exprparse.py',341),
  ('expression -> expression EQ expression','expression',3,'p_expression_rel','exprparse.py',342),
  ('expression -> expression NEQ expression','expression',3,'p_expression_rel','exprparse.py',343),
  ('expression -> expression LAND expression','expression',3,'p_expression_rel','exprparse.py',344),
  ('expression -> expression LOR expression','expression',3,'p_expression_rel','exprparse.py',345),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','exprparse.py',351),
  ('expression -> location','expression',1,'p_expression_location','exprparse.py',357),
  ('expression -> literal','expression',1,'p_expression_literal','exprparse.py',363),
  ('literal -> INTEGER','literal',1,'p_literal','exprparse.py',369),
  ('literal -> FLOAT','literal',1,'p_literal','exprparse.py',370),
  ('literal -> STRING','literal',1,'p_literal','exprparse.py',371),
  ('literal -> BOOL','literal',1,'p_literal','exprparse.py',372),
  ('location -> ID','location',1,'p_location','exprparse.py',378),
  ('typename -> ID','typename',1,'p_typename','exprparse.py',384),
  ('empty -> <empty>','empty',0,'p_empty','exprparse.py',390),
]
